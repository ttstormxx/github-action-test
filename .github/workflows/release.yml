name: Release

on:
  release:
    types: [created]

jobs:
  build-and-deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.8.10]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build and package for ${{ matrix.os }}
        run: |
          pyinstaller -F *.py
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/*
          asset_name: ${{ env.RELEASE_ASSET_NAME }}
          asset_content_type: application/zip
          api_key: ${{ secrets.GITHUB_TOKEN }}
        env:
            RELEASE_ASSET_NAME: v1.0.0
